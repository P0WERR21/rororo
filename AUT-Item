local playerService = game:GetService'Players'
local playerClient = playerService.LocalPlayer

local playerChar = playerClient.Character

local tableToPickup = {
    "Meteor",
    "SandDebris",
}


local function makeMoveable(_)
    if (_.Name == 'Meteor' or _.Name == 'SandDebris') and _.CanCollide == true then
        _.CanCollide = false
    end
end

playerClient.CharacterAdded:Connect(function()
    playerChar = playerClient.Character
end)

local function disableCollision()
    for _, Collision in pairs(workspace.Map.Layout.Collisions:GetChildren()) do
        if (Collision:IsA'BasePart' and Collision.CanCollide == true) then
            Collision.CanCollide = false
        end
    end
end

local function renderDebris()
    disableCollision()
    
    for _, Child in pairs(workspace.ItemSpawns:GetDescendants()) do
        makeMoveable(Child)
    end

    workspace.ItemSpawns.DescendantAdded:Connect(makeMoveable)
    
    local newPart = Instance.new('Part', workspace)
    newPart.Name = game:GetService'HttpService':GenerateGUID(false)
    newPart.Anchored = true
    newPart.Position = Vector3.new(-535, 908, 640)
    newPart.CanCollide = true
    newPart.Size = Vector3.new(10000,0.5,10000)
    task.wait(1)
    newPart.Rotation = Vector3.new(0, 0, 0)
    
    local deathHold = newPart:Clone()
    deathHold.Position = Vector3.new(-535, 800, 640) 
    task.wait()

    playerChar:MoveTo(newPart.Position)
end

renderDebris()
repeat task.wait() until workspace.ItemSpawns:FindFirstChild('Meteor', true)

shared.Debounce = true

local function movePickup(_)
    if shared.Debounce then
        disableCollision()
        task.wait(.3)
        shared.Debounce = false
        local realInstance = _.Parent.Parent;
        repeat 
            realInstance.CanCollide = false
            playerChar:MoveTo(realInstance.Position + Vector3.new(0, -4, 0))
            fireproximityprompt(_)
            task.wait()
        until not realInstance or not realInstance.Parent
        shared.Debounce = true
        task.wait(.1)
    end
end


local function startSearch()
    for _, Item in pairs(workspace.ItemSpawns:GetDescendants()) do
        if (Item:FindFirstChild'ProximityAttachment' and table.find(tableToPickup, Item.Name)) then
            local interactionPrompt = Item:FindFirstChild'ProximityAttachment'.Interaction
            movePickup(interactionPrompt)
        end     
    end
end


while shared.Toggled do
    startSearch()
    task.wait()
end
